<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    
</head>
<body>
    <% if (isAuthenticated) { %>
        <%- include('user_nav', { files: files }) %> <!-- 로그인된 경우 -->
      <% } else { %>
        <%- include('nav', { files: files }) %> <!-- 로그인되지 않은 경우 -->
    <% } %>

    <div class="charts-wrapper">
        <div class="chart-container">
            <canvas id="myPieChart"></canvas>
            <div class="chart-description">취약점 점검 결과 위험 등급</div>
        </div>
        <div class="chart-container">
            <canvas id="myChart"></canvas>
            <div class="chart-description">각 항목별 취약점 점검 결과</div>
        </div>
        <div class="div-box">
          <ul>
            <li>
                <%= system_info[0] ? system_info[0].hostname : null %>
            </li>
            <li>
                <%= system_info[0] ? system_info[0].date_time : null %>
            </li>
            <li>
                <%= system_info[0] ? system_info[0].release : null %>
            </li>
            <li>
                <%= system_info[0] ? system_info[0].info : null %>
            </li>
          </ul>
          <div class="chart-description">점검 시스템 세부 정보</div>
      </div>
    </div>
    
    <script>
        const ctx1 = document.getElementById('myChart').getContext('2d');
        ctx1.canvas.width = 500;  // 너비 설정
        ctx1.canvas.height = 455; // 높이 설정
        const myChart = new Chart(ctx1, {
            type: 'bar',
            data: {
                labels: ['계정 관리 : <%= Inspection_Items[0] ? Inspection_Items[0].Account_Management : null %>', '파일 및 디렉터리 관리 : <%= Inspection_Items[1] ? Inspection_Items[1].Files_Directory_Management : null %>', '서비스 관리 : <%= Inspection_Items[2] ? Inspection_Items[2].Service_Management : null %>'
                , '패치 관리 : <%= Inspection_Items[3] ? Inspection_Items[3].Patch_Management : null %>', '로그 관리 : <%= Inspection_Items[4] ? Inspection_Items[4].Log_Management : null %>'],
                datasets: [{
                    label: '항목별 취약점 식별 현황',
                    data: [
                        '<%= Inspection_Items[0] ? Inspection_Items[0].Account_Management : null %>',
                        '<%= Inspection_Items[1] ? Inspection_Items[1].Files_Directory_Management : null %>',
                        '<%= Inspection_Items[2] ? Inspection_Items[2].Service_Management : null %>',
                        '<%= Inspection_Items[3] ? Inspection_Items[3].Patch_Management : null %>',
                        '<%= Inspection_Items[4] ? Inspection_Items[4].Log_Management : null %>'
                    ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    
        const ctx2 = document.getElementById('myPieChart').getContext('2d');
        const myPieChart = new Chart(ctx2, {
            type: 'pie',
            data: {
                labels: ['High : <%= Severity[0] ? Severity[0].High : null %>', 'Mid : <%= Severity[1] ? Severity[1].Mid : null %>', 'Low : <%= Severity[2] ? Severity[2].Low : null %>'],
                datasets: [{
                    label: 'My Dataset',
                    data: [
                        '<%= Severity[0] ? Severity[0].High : null %>',
                        '<%= Severity[1] ? Severity[1].Mid : null %>',
                        '<%= Severity[2] ? Severity[2].Low : null %>'
                    ],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(255, 206, 86, 0.2)',
                        'rgba(75, 192, 192, 0.2)',
                        'rgba(153, 102, 255, 0.2)',
                        'rgba(255, 159, 64, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(255, 206, 86, 1)',
                        'rgba(75, 192, 192, 1)',
                        'rgba(153, 102, 255, 1)',
                        'rgba(255, 159, 64, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return context.label + ': ' + context.raw;
                            }
                        }
                    }
                }
            }
        });
    </script>
    <script>
        function showTab(tabId) {
        // 모든 탭 콘텐츠를 숨깁니다.
        const tabContents = document.querySelectorAll('.tab-content');
        tabContents.forEach(content => content.classList.remove('active'));
        
        // 모든 탭 버튼에서 active 클래스를 제거합니다.
        const tabButtons = document.querySelectorAll('.tab-button');
        tabButtons.forEach(button => button.classList.remove('active'));
        
        // 클릭한 탭 버튼에 active 클래스를 추가합니다.
        document.querySelector(`.tab-button[onclick="showTab('${tabId}')"]`).classList.add('active');
        
        // 클릭한 탭의 콘텐츠를 표시합니다.
        document.getElementById(tabId).classList.add('active');
    }

    // 초기 탭을 설정합니다.
    document.addEventListener('DOMContentLoaded', () => {
        showTab('tab1'); // 기본으로 첫 번째 탭을 활성화
    });
    </script>
    <div>
      <hr class="bold-line">
    </div>
    <div class="grid-container">
        <div class="tabs">
            <button class="tab-button active" onclick="showTab('tab1')">계정 관리</button>
            <button class="tab-button" onclick="showTab('tab2')">파일 및 디렉터리 관리</button>
            <button class="tab-button" onclick="showTab('tab3')">서비스 관리</button>
            <button class="tab-button" onclick="showTab('tab4')">패치 관리</button>
            <button class="tab-button" onclick="showTab('tab5')">로그 관리</button>
        </div>
        <div class="filedown-div">
            <h2>점검 상세 결과 및 진단 결과 다운로드</h2>
            <he>[ txt, cel, hwp.. 각각의 확장자로 변환 후 오픈 가능 ]</he>
        </div>
    </div>
    <div class="grid-container">
        <div class="left">
            <div id="tab1" class="tab-content active">
                <h2>취약한 계정 관리 항목</h2>
                <ul class="result-view">
                    <% if (tab1Items.length > 0) { %>
                        <% tab1Items.forEach(title => { %>
                            <li><%= title %></li>
                        <% }) %>
                    <% } else { %>              
                        <li>진단 결과 해당 항목은 식별되지 않았습니다.</li>
                    <% } %>
                </ul>
            </div>
            <div id="tab2" class="tab-content">
                <h2>취약한 파일 및 디렉터리 관리 항목</h2>
                <ul class="result-view">
                    <% if (tab2Items.length > 0) { %>
                        <% tab2Items.forEach(title => { %>
                            <li><%= title %></li>
                        <% }) %>
                    <% } else { %>              
                        <li>진단 결과 해당 항목은 식별되지 않았습니다.</li>
                    <% } %>
                </ul>
            </div>
            <div id="tab3" class="tab-content">
                <h2>취약한 서비스 관리 항목</h2>
                <ul class="result-view">
                    <% if (tab3Items.length > 0) { %>
                        <% tab3Items.forEach(title => { %>
                            <li><%= title %></li>
                        <% }) %>
                    <% } else { %>
                        <li>진단 결과 해당 항목은 식별되지 않았습니다.</li>
                    <% } %>
                </ul>
            </div>
            <div id="tab4" class="tab-content">
                <h2>취약한 패치 관리 항목</h2>
                <ul class="result-view">
                    <% if (tab4Items.length > 0) { %>
                        <% tab4Items.forEach(title => { %>
                            <li><%= title %></li>
                        <% }) %>
                    <% } else { %>
                        <li>진단 결과 해당 항목은 식별되지 않았습니다.</li>
                    <% } %>
                </ul>
            </div>
            <div id="tab5" class="tab-content">
                <h2>취약한 로그 관리 항목</h2>
                <ul class="result-view">
                    <% if (tab5Items.length > 0) { %>
                        <% tab5Items.forEach(title => { %>
                            <li><%= title %></li>
                        <% }) %>
                    <% } else { %>
                        <li>진단 결과 해당 항목은 식별되지 않았습니다.</li>
                    <% } %>
                </ul>
            </div>
        </div>
        <div class="right">
            <ul>
                <% if (typeof result_files !== 'undefined' && result_files.length > 0) { %>
            <% result_files.forEach(function(file) { %>
                <li>
                    <i class="fa <% if (file.endsWith('.pdf')) { %>fa-file-pdf<% } else if (file.endsWith('.docx')) { %>fa-file-word<% } else { %>fa-file<% } %>"></i>
                    <a href="/result_download/<%= encodeURIComponent(file) %>"><%= file %></a>
                </li>
            <% }); %>
        <% } else { %>
            <li>No files found.</li>
        <% } %>
            </ul>
            <div style="margin-top: 60px;">
                <button type="button" class="btn btn-outline-primary" onclick="redirectToClearCollections()">대시보드 초기화</button>
            </div>
        </div>
        <script>
            function redirectToClearCollections() {
              // clear_collections 라우터로 리다이렉션
              window.location.href = '/clear_collections';
            }
          </script>
</body>
</html>