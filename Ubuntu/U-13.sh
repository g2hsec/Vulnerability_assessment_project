cat << EOF
===== [U-13] Check SUID, SGID, settings file               =====
=====                  Chaking...........               =====
EOF
echo "--------------------------------------------------------------------------" >> $target
echo "                        U-13   SUID, SGID, 설정 파일점검                        " >> $target
echo "--------------------------------------------------------------------------" >> $target
echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++" >> $target
echo "점검목적 : 불필요한 SUID, SGID 설정 제거로 악의적인 사용자의 권한상승을 방지하기 위함" >> $target
echo "보안위협 : SUID, SGID 파일의 접근권한이 적절하지 않을 경우 SUID, SGID 설정된 파일로 특정 명령어를 실행하여 root 권한 획득 가능함" >> $target
echo "+판단기준 양호 🔘: 주요 실행파일의 권한에 SUID와 SGID에 대한 설정이 부여되어 있지 않은 경우" >> $target
echo "+판단기준 취약 🚫: 주요 실행파일의 권한에 SUID와 SGID에 대한 설정이 부여되어 있는 경우" >> $target
echo "++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++" >> $target
echo "" >> $target
echo "-------------" >> $result
echo "U-13 점검 결과" >> $result
u13=0
u13_Files_Directory_Management=0
u13_safe_check=0

u13_default_sugid_files=(
    "/usr/lib/x86_64-linux-gnu/utempter/utempter"
    "/usr/lib/xorg/Xorg.wrap"
    "/usr/lib/snapd/snap-confine"
    "/usr/lib/openssh/ssh-keysign"
    "/usr/lib/dbus-1.0/dbus-daemon-launch-helper"
    "/usr/libexec/camel-lock-helper-1.2"
    "/usr/libexec/polkit-agent-helper-1"
    "/usr/sbin/unix_chkpwd"
    "/usr/sbin/pppd"
    "/usr/sbin/pam_extrausers_chkpwd"
    "/usr/bin/newgrp"
    "/usr/bin/chsh"
    "/usr/bin/fusermount3"
    "/usr/bin/pkexec"
    "/usr/bin/chage"
    "/usr/bin/vmware-user-suid-wrapper"
    "/usr/bin/chfn"
    "/usr/bin/crontab"
    "/usr/bin/expiry"
    "/usr/bin/gpasswd"
    "/usr/bin/su"
    "/usr/bin/mount"
    "/usr/bin/sudo"
    "/usr/bin/umount"
    "/usr/bin/ssh-agent"
    "/usr/bin/passwd"
)

u13_check_sugid_files=(
    "/sbin/dump" 
    "/sbin/restore" 
    "/sbin/unix_chkpwd" 
    "/usr/bin/at" 
    "/usr/bin/lpq" 
    "/usr/bin/lpq-lpd" 
    "/usr/bin/lpr" 
    "/usr/bin/lpr-lpd" 
    "/usr/bin/lprm" 
    "/usr/bin/lprm-lpd" 
    "/usr/bin/newgrp" 
    "/usr/sbin/lpc" 
    "/usr/sbin/lpc-lpd" 
    "/usr/sbin/traceroute"
)

echo -e "${RED}Ubunt 시스템의 기본적으로 설정된 SUID, SGID 파일을 제외한 잘못된 SUID, SGID 설정 파일들을 확인합니다.${NC}"  >> $target
# 결과를 저장할 배열
u13_questionable_files=()

# `find` 명령어의 결과를 배열로 저장합니다.
mapfile -t u13_find_results < <(find / -xdev -user root -type f \( -perm -04000 -o -perm -02000 \) 2>/dev/null)

# 각 파일에 대해 제외할 목록과 비교하여 중복을 처리합니다.
for u13_find_result in "${u13_find_results[@]}"; do
    u13_exclude=0
    for u13_exclude_file in "${u13_default_sugid_files[@]}"; do
        if [[ "$u13_find_result" == "$u13_exclude_file" ]]; then
            u13_exclude=1
            break
        fi
    done
    
    # 중복되지 않거나 제외 목록에 포함되지 않는 경우 배열에 추가
    if [[ $u13_exclude -eq 0 ]]; then
        # 배열에 추가하기 전에 중복 확인
        if [[ ! " ${u13_questionable_files[@]} " =~ " ${u13_find_result} " ]]; then
            u13_questionable_files+=("$u13_find_result")
        fi
    fi
done

if [[ ${#u13_questionable_files[@]} -gt 0 ]]; then
    u13_safe_check=$((u13_safe_check+1))
    echo "다음 파일들은 제외 목록에 없거나 중복되지 않으며, 의심스러운 SUID, SGID가 설정됭어 있습니다." >> $target
    for u13_questionable_file in "${u13_questionable_files[@]}"; do
        echo "$u13_questionable_file" >> $target
    done
else
    echo "제외 목록에 포함되지 않는 파일이 없습니다." >> $target
fi

echo -e "${RED}Check-List 기반의 불필요한 SUID/SGID 설정 파일 목록을 점검합니다.${NC}" >> $target
for u13_check_sugid_file in "${u13_check_sugid_files[@]}";do
    u13_chekc_perm=$(stat -c "%A" "$u13_check_sugid_file" 2> /dev/null )
    if [[ $u13_chekc_perm == *s* || $u13_chekc_perm == *S* ]];then
        echo "$u13_check_sugid_file 파일에 불필요한 SUID/SGID 가 설정되어 있습니다." >> $target
        u13_safe_check=$((u13_safe_check+1))
    fi
done

if [[ $u13_safe_check -ge 1 ]];then
    u13=$((u13+1))
    echo "점검 결과 : 취약" >> $result
else
    echo "점검 결과 : 양호" >> $result
fi
if [[ $u13 -ge 1 ]];then
    High=$((High+1))
    Files_Directory_Management=$((Files_Directory_Management+1))
    u13_Files_Directory_Management=1
fi